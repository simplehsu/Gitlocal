# Example TLS CA

# These configs must be in the default section
config_diagnostics = 1
openssl_conf = openssl_init


[openssl_init]
engines = engine_section

[engine_section]
pkcs11 = pkcs11_section

[pkcs11_section]
engine_id = pkcs11
# dynamic_path is not required if you have installed
# the appropriate pkcs11 engines to your openssl directory
#dynamic_path = /usr/lib/x86_64-linux-gnu/engines-1.1/pkcs11.so
# Engine parameters
# > openssl engine -vvv -tt pkcs11
# (pkcs11) pkcs11 engine
#      [ available ]
#      SO_PATH: Specifies the path to the 'pkcs11' engine shared library
#           (input flags): STRING
#      MODULE_PATH: Specifies the path to the PKCS#11 module shared library
#           (input flags): STRING
#      PIN: Specifies the pin code
#           (input flags): STRING
#      VERBOSE: Print additional details
#           (input flags): NO_INPUT
#      QUIET: Remove additional details
#           (input flags): NO_INPUT
#      INIT_ARGS: Specifies additional initialization arguments to the PKCS#11 module
#           (input flags): STRING
#      FORCE_LOGIN: Force login to the PKCS#11 module
#           (input flags): NO_INPUT
MODULE_PATH = /usr/lib/x86_64-linux-gnu/pkcs11/yubihsm_pkcs11.so # REPLACE THIS LINE AS APPROPRIATE
# This is the key ID of the authkey and passphrase, concatenated.
# It could be kept in an environment var, but it would show up in /proc/<PID>/environ
#  for whatever process got started with that (OpenSSL) and only allows signing.
# Syntax for that would be `PIN = ${ENV::IDPIN}` to get it from env var $PIN
# E.g. if key ID `0x12cd` is the authentication key for signing, and the password is
#  `xQi2yYIiSzY4vWNT1l3fsdo17`, then use `PIN = 12cdxQi2yYIiSzY4vWNT1l3fsdo17`
PIN = c6bb4T4fIeHRpbowGZKqKDssE2O7Q # REPLACE THIS LINE AS APPROPRIATE
# Can add "debug" for more verbose output, it is not recommended for production
INIT_ARGS = connector=http://127.0.0.1:12345
init = 0

[ default ]
ca                      = tls-ca                # CA name
dir                     = .                     # Top dir
name_opt                = multiline,-esc_msb,utf8 # Display UTF-8 characters

# CA certificate request

[ req ] # Options for the `req` tool (`man req`).
default_bits            = 2048                  # RSA key size, unused but required
encrypt_key             = yes                   # Protect private key
default_md              = sha256                # MD to use
utf8                    = yes                   # Input is UTF-8
string_mask             = utf8only              # Emit UTF-8 strings
prompt                  = no                    # Don't prompt for DN
distinguished_name      = ca_dn                 # DN section
req_extensions          = ca_reqext             # Desired extensions

[ ca_dn ] # See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName             = "US"
organizationName        = "Motive Technlogies"
organizationalUnitName  = "Embedded"
commonName              = "Motive Firefly CA 18 952 385"   # REPLACE THIS LINE AS APPROPRIATE

[ ca_reqext ] # Extensions for a typical intermediate CA (`man x509v3_config`).
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:0
subjectKeyIdentifier    = hash

# CA operational settings

[ ca ]
default_ca              = tls_ca                # The default CA section

[ tls_ca ] # See `man ca`
certificate             = $dir/ca/$ca.crt       # The CA cert
private_key             = 0:f8d5                # CA private key, NOTE it's slot:id in the HSM, and is the asymmetric-key! # REPLACE THIS LINE AS APPROPRIATE
new_certs_dir           = $dir/certs/           # Certificate archive
crl_dir                 = $dir/crls/            # Certificate Revocation List (CRL) archive
serial                  = $dir/ca/db/$ca.crt.srl # Serial number file
crlnumber               = $dir/ca/db/$ca.crl.srl # CRL number file
database                = $dir/ca/db/$ca.db     # Index file
unique_subject          = no                    # Require unique subject
default_days            = 3650                  # How long to certify for
default_md              = sha256                # MD to use, SHA1 is deprecated, use SHA2 instead
policy                  = any_pol               # Default naming policy
email_in_dn             = no                    # Add email to cert DN
preserve                = no                    # Keep passed DN ordering
name_opt                = $name_opt             # Subject DN display options
cert_opt                = ca_default            # Certificate display options
copy_extensions         = copy                  # Copy extensions from CSR
x509_extensions         = client_ext            # Default cert extensions
default_crl_days        = 30                    # How long before next CRL
crl_extensions          = crl_ext               # CRL extensions

[ match_pol ] # See the POLICY FORMAT section of `man ca`.
countryName             = match                 # Must match 'US'
stateOrProvinceName     = optional              # Included if present
localityName            = optional              # Included if present
organizationName        = match                 # Must match 'Keep Truckin'
organizationalUnitName  = optional              # Included if present
commonName              = supplied              # Must be present

[ extern_pol ] # See the POLICY FORMAT section of `man ca`.
countryName             = optional              # Must be present
stateOrProvinceName     = optional              # Included if present
localityName            = optional              # Included if present
organizationName        = match                 # Must be present
organizationalUnitName  = optional              # Included if present
commonName              = supplied              # Must be present

[ any_pol ] # See the POLICY FORMAT section of `man ca`.
domainComponent         = optional
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

# Extensions

[ client_ext ] # Extensions for client certificates (`man x509v3_config`).
keyUsage                = critical,digitalSignature
basicConstraints        = CA:false
extendedKeyUsage        = clientAuth
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

[ crl_ext ]
authorityKeyIdentifier  = keyid:always
